after_script:
- "if [[ -v DEPLOY_S3_ACCESS_KEY ]]; then\n  sudo pip install awscli\n  export AWS_ACCESS_KEY_ID=${DEPLOY_S3_ACCESS_KEY}\n\
  \  export AWS_SECRET_ACCESS_KEY=${DEPLOY_S3_SECRET_KEY}\n\n  JOB_ARTIFACTS_URL_PREFIX=s3://${DEPLOY_S3_BUCKET}/${ARTIFACTS_UPLOAD_PATH}/travis_jobs/${TRAVIS_JOB_NUMBER}-run\n\
  \  JOB_RUN_ATTEMPTS=$( aws s3 ls ${JOB_ARTIFACTS_URL_PREFIX} | wc -l | tr -d '[:space:]'\
  \ )\n  JOB_STATUS=$( [ \"$TRAVIS_TEST_RESULT\" == \"0\" ] && echo SUCCESS || echo\
  \ FAILURE )\n\n  mkdir -p /tmp/job_artifacts/\n  rsync -av -m \\\n    --include='**/'\
  \ \\\n    --include='**/surefire-reports/**.xml' \\\n    --include='**/surefire-reports/emailable-report.html'\
  \ \\\n    --include='**/product-tests-presto-jvm-error-file.log' \\\n    --include='**/test-reports/junitreports/**.xml'\
  \ \\\n    --include='**/test-reports/emailable-report.html' \\\n    --exclude='*'\
  \ \\\n    . /tmp/job_artifacts/\n  wget https://api.travis-ci.org/jobs/${TRAVIS_JOB_ID}/log.txt?deansi=true\
  \ -O /tmp/job_artifacts/log.txt\n\n  aws s3 sync /tmp/job_artifacts ${JOB_ARTIFACTS_URL_PREFIX}_$((JOB_RUN_ATTEMPTS\
  \ + 1))-${JOB_STATUS} --quiet\nfi\n"
before_cache:
- rm -rf $HOME/.m2/repository/com/facebook
- rm -rf $HOME/CACHE; find $TRAVIS_BUILD_DIR -name .ekstazi | while read line; do
  du -sh $line;         DIR=$(dirname $HOME/CACHE$line); mkdir -p $DIR; cp -r $line
  $DIR; done
- echo CACHESIZE $(du -sk $HOME/CACHE)
- cp /tmp/classpathFile $HOME/CACHE/classpathFile
before_deploy:
- mkdir /tmp/artifacts
- cp -n presto-server/target/presto-server-*.tar.gz /tmp/artifacts
- cp -n presto-server-rpm/target/presto-server-rpm-*.x86_64.rpm /tmp/artifacts
- cp -n presto-product-tests/target/presto-product-tests-*-executable.jar /tmp/artifacts
- cp -n presto-jdbc/target/presto-jdbc-*.jar /tmp/artifacts
- cp -n presto-cli/target/presto-cli-*-executable.jar /tmp/artifacts
- echo $TRAVIS_COMMIT > /tmp/artifacts/git-revision.txt
- echo "<script>location='https://travis-ci.org/${TRAVIS_REPO_SLUG}/builds/${TRAVIS_BUILD_ID}'</script>"
  > /tmp/artifacts/travis_build.html
- ls -lah /tmp/artifacts
before_install:
- if [ "$TRAVIS_OS_NAME" == "osx" ];        then sed -i '' 's/<gib.enabled>true/<gib.enabled>false/'
  $TRAVIS_BUILD_DIR/pom.xml;        else sed -i 's/<gib.enabled>true/<gib.enabled>false/'
  $TRAVIS_BUILD_DIR/pom.xml;        fi
- find $HOME/CACHE -name .ekstazi | while read line; do du -sh $line;         DIR=$(dirname
  ${line#$HOME/CACHE}); if [[ -d ${DIR#.ekstazi/} ]]; then cp -r $line $DIR; fi; done
before_script:
- find $TRAVIS_BUILD_DIR -name .ekstazi | while read line; do rm -rf $line; done
- find $HOME/CACHE -name .ekstazi | while read line; do du -sh $line;         DIR=$(dirname
  ${line#$HOME/CACHE}); if [[ -d ${DIR#.ekstazi/} ]]; then cp -r $line $DIR; fi; done
- "export ARTIFACTS_UPLOAD_PATH=${ARTIFACTS_UPLOAD_PATH_BRANCH}\nif [ \"$TRAVIS_PULL_REQUEST\"\
  \ != \"false\" ]; then\n  export ARTIFACTS_UPLOAD_PATH=${ARTIFACTS_UPLOAD_PATH_PR}\n\
  fi\n"
- if [ "$TRAVIS_OS_NAME" == "osx" ];    then sed -i '' 's/<gib.enabled>false/<gib.enabled>true/'
  $TRAVIS_BUILD_DIR/pom.xml;    else sed -i 's/<gib.enabled>false/<gib.enabled>true/'
  $TRAVIS_BUILD_DIR/pom.xml;    fi
- if [[ -e $HOME/CACHE/classpathFile ]]; then cp $HOME/CACHE/classpathFile /tmp/;
  fi
cache:
  directories:
  - $HOME/.m2/repository
  - $HOME/CACHE
deploy:
  true:
    all_branches: true
    condition: -v DEPLOY_S3_ACCESS_KEY && -v MAVEN_CHECKS
  access_key_id: ${DEPLOY_S3_ACCESS_KEY}
  acl: public_read
  bucket: ${DEPLOY_S3_BUCKET}
  local-dir: /tmp/artifacts
  provider: s3
  secret_access_key: ${DEPLOY_S3_SECRET_KEY}
  skip_cleanup: true
  upload-dir: ${ARTIFACTS_UPLOAD_PATH}
dist: trusty
env:
  global:
  - MAVEN_OPTS="-Xmx512M -XX:+ExitOnOutOfMemoryError"
  - MAVEN_SKIP_CHECKS_AND_DOCS="-Dair.check.skip-all=true -Dmaven.javadoc.skip=true"
  - MAVEN_FAST_INSTALL="-DskipTests $MAVEN_SKIP_CHECKS_AND_DOCS -B -q -T C1"
  - ARTIFACTS_UPLOAD_PATH_BRANCH=travis_build_artifacts/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
  - ARTIFACTS_UPLOAD_PATH_PR=travis_build_artifacts_pr/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
  - TEST_FLAGS=""
  matrix:
  - MAVEN_CHECKS=true
  - TEST_SPECIFIC_MODULES=presto-tests
  - TEST_SPECIFIC_MODULES=presto-tests TEST_FLAGS="-P ci-only"
  - TEST_SPECIFIC_MODULES=presto-raptor
  - TEST_SPECIFIC_MODULES=presto-accumulo
  - TEST_SPECIFIC_MODULES=presto-cassandra
  - TEST_SPECIFIC_MODULES=presto-hive
  - TEST_OTHER_MODULES=!presto-tests,!presto-raptor,!presto-accumulo,!presto-cassandra,!presto-hive,!presto-docs,!presto-server,!presto-server-rpm
  - PRODUCT_TESTS_BASIC_ENVIRONMENT=true
  - PRODUCT_TESTS_SPECIFIC_ENVIRONMENT=true
  - HIVE_TESTS=true
install:
- ./mvnw -v
- "if [[ -v TEST_SPECIFIC_MODULES ]]; then\n  ./mvnw install $MAVEN_FAST_INSTALL -pl\
  \ $TEST_SPECIFIC_MODULES -am\nfi\n"
- "if [[ -v TEST_OTHER_MODULES ]]; then\n  ./mvnw install $MAVEN_FAST_INSTALL -pl\
  \ '!presto-docs,!presto-server,!presto-server-rpm'\nfi\n"
- "if [[ -v PRODUCT_TESTS_BASIC_ENVIRONMENT || -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT\
  \ ]]; then\n  ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server-rpm'\n\
  fi\n"
- "if [[ -v HIVE_TESTS ]]; then\n  ./mvnw install $MAVEN_FAST_INSTALL -pl presto-hive-hadoop2\
  \ -am\nfi\n"
language: java
script:
- touch /tmp/NOW
- echo GIBSTUDYSTART $(date)
- "if [[ -v MAVEN_CHECKS ]]; then\n  ./mvnw install -DskipTests -B -T C1 -P ci\nfi\n"
- "if [[ -v TEST_SPECIFIC_MODULES ]]; then\n  ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS\
  \ -B -pl $TEST_SPECIFIC_MODULES $TEST_FLAGS\nfi\n"
- "if [[ -v TEST_OTHER_MODULES ]]; then\n  ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS\
  \ -B -pl $TEST_OTHER_MODULES\nfi\n"
- "if [[ -v PRODUCT_TESTS_BASIC_ENVIRONMENT ]]; then\n  presto-product-tests/bin/run_on_docker.sh\
  \ \\\n    multinode -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds\n\
  fi\n"
- "if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then\n  presto-product-tests/bin/run_on_docker.sh\
  \ \\\n    singlenode-kerberos-hdfs-impersonation -g storage_formats,cli,hdfs_impersonation,authorization\n\
  fi\n"
- "if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then\n  presto-product-tests/bin/run_on_docker.sh\
  \ \\\n    singlenode-ldap -g ldap -x simba_jdbc\nfi\n"
- "if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then\n  presto-product-tests/bin/run_on_docker.sh\
  \ \\\n    multinode-tls -g smoke,cli,group-by,join,tls\nfi\n"
- "if [[ -v HIVE_TESTS ]]; then\n  presto-hive-hadoop2/bin/run_on_docker.sh\nfi\n"
- echo GIBSTUDYEND $(date)
- cd $TRAVIS_BUILD_DIR
- echo TESTNUM $(find . -name TEST-*.xml -newer /tmp/NOW | wc -l)
services:
- docker
sudo: required
